# LoadBalancer Service Definition for XD Web Application
# =====================================================
# This file defines a Kubernetes LoadBalancer Service that provides external
# access to our XD web application with built-in load balancing capabilities.
#
# WHY LOADBALANCER SERVICES ARE NECESSARY IN KUBERNETES:
# ======================================================
# 1. EXTERNAL ACCESS: Provide external access to applications running inside
#    the cluster, making them accessible from outside the Kubernetes cluster
#    via a public IP address or hostname.
#
# 2. AUTOMATIC LOAD BALANCING: Distribute incoming traffic across multiple
#    pod instances automatically, improving performance and ensuring high
#    availability even when individual pods fail.
#
# 3. CLOUD PROVIDER INTEGRATION: Automatically provision cloud load balancers
#    (AWS ELB, GCP Load Balancer, Azure Load Balancer) when running on
#    supported cloud platforms.
#
# 4. HEALTH CHECKING: Automatically perform health checks on backend pods
#    and route traffic only to healthy instances, ensuring reliable service.
#
# 5. TRAFFIC DISTRIBUTION: Use various load balancing algorithms (round-robin,
#    least connections, etc.) to distribute traffic efficiently across pods.
#
# 6. SCALABILITY: Automatically adapt to changes in the number of pod replicas,
#    adding or removing backends as the deployment scales up or down.
#
# 7. HIGH AVAILABILITY: Provide redundancy by distributing traffic across
#    multiple pods running on different nodes, reducing single points of failure.
#
# 8. PRODUCTION READY: Essential for production deployments where external
#    users need reliable access to the application.

apiVersion: v1
kind: Service
metadata:
  name: xd-web-app-loadbalancer
  namespace: xd
  labels:
    app: xd-web-app
    service-type: loadbalancer
  annotations:
    # Optional: Add cloud provider specific annotations
    # For AWS: service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    # For GCP: cloud.google.com/load-balancer-type: "External"
    # For Azure: service.beta.kubernetes.io/azure-load-balancer-internal: "false"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  - port: 443
    targetPort: 3000
    protocol: TCP
    name: https
  selector:
    app: xd-web-app
  # Optional: Specify external IPs if known
  # externalIPs:
  #   - "203.0.113.1"
